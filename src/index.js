const MORSE_TABLE = {
    '.-':     'a',
    '-...':   'b',
    '-.-.':   'c',
    '-..':    'd',
    '.':      'e',
    '..-.':   'f',
    '--.':    'g',
    '....':   'h',
    '..':     'i',
    '.---':   'j',
    '-.-':    'k',
    '.-..':   'l',
    '--':     'm',
    '-.':     'n',
    '---':    'o',
    '.--.':   'p',
    '--.-':   'q',
    '.-.':    'r',
    '...':    's',
    '-':      't',
    '..-':    'u',
    '...-':   'v',
    '.--':    'w',
    '-..-':   'x',
    '-.--':   'y',
    '--..':   'z',
    '.----':  '1',
    '..---':  '2',
    '...--':  '3',
    '....-':  '4',
    '.....':  '5',
    '-....':  '6',
    '--...':  '7',
    '---..':  '8',
    '----.':  '9',
    '-----':  '0',
};

function decode(expr) {
    let arr = expr.split('**********');
    let res = [];
    let result = [];
    let kek = '';
    let str = '';
    let k = 10;
    arr.forEach(item =>{
        let count = item.length/10;
        let i = 0;
        let kk = 10;
        while(count > 0) {                    // Раскодировал слово
            let str = item.slice(i,kk);
            let decode;
            let decodeChar;
            for(let j = 0; j < str.length; j++) {    // раскодировал символ
                if(str[j] === '0') continue;
                if(str[j] === '1') {
                    decode = str.slice(j,j+2) === '11' ? '-' : '.';
                    result.push(decode)
                    j++;
                }
            }                          // раскодировал символ
            result.push('sl')
            count--;
            i+=10;
            kk+=10;
        }                          // Раскодировал сло
        result.push('space ')
    })
    result.forEach(item => {
        kek += item === 'sl' ? ' ' : item
    })
    kek.split(' ').forEach(item => {
        str += item === 'space' ? ' ' : MORSE_TABLE[item]
    })
    for(let prop of str.split(' ')) {
        if(prop !== 'undefined') res.push(prop)
    }
    return res.join(' ')
}


console.log(decode("000000001100101010100000000010**********00111110110000101011000000101000111011100000111011**********00111010100000101110000011111100001011110000001110**********001010111000001111110011101011**********00101111110000101011000000111100101111100000101010**********0000111111001010101100000000100000101110**********000000001100101010100000000010**********0010111010000000101100111110100011101111**********000011101000001111110000111110"))

module.exports = {
    decode
}